[{"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/index.js":"1","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/reportWebVitals.js":"2","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/App.js":"3","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupTables.js":"4","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/NavBar.js":"5","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/HomePage.jsx":"6","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/HeadtoHead.jsx":"7","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/AllPlayers.js":"8","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/SignupOrLogin.jsx":"9","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupTable.js":"10","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/new_data-20-21.js":"11","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/columnsAP.js":"12","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/multimodal.js":"13","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupingFunctions.js":"14","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/GroupHeader.js":"15","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/SearchBar.jsx":"16","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/PlayerCard.jsx":"17","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/createGroupModal.js":"18","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/createExistingGroupsModal.js":"19","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/uncleaned_players_18-19.js":"20","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/uncleaned_players_19-20.js":"21"},{"size":504,"mtime":1637807178232,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1635364066462,"results":"24","hashOfConfig":"23"},{"size":1616,"mtime":1639195498023,"results":"25","hashOfConfig":"23"},{"size":836,"mtime":1639195468419,"results":"26","hashOfConfig":"23"},{"size":711,"mtime":1637807178203,"results":"27","hashOfConfig":"23"},{"size":144,"mtime":1637807178201,"results":"28","hashOfConfig":"23"},{"size":1205,"mtime":1637807178209,"results":"29","hashOfConfig":"23"},{"size":3638,"mtime":1639195468361,"results":"30","hashOfConfig":"23"},{"size":4901,"mtime":1639195460225,"results":"31","hashOfConfig":"23"},{"size":1722,"mtime":1639195468361,"results":"32","hashOfConfig":"23"},{"size":176229,"mtime":1637095291923,"results":"33","hashOfConfig":"23"},{"size":378,"mtime":1635364066456,"results":"34","hashOfConfig":"23"},{"size":4822,"mtime":1639195468362,"results":"35","hashOfConfig":"23"},{"size":2539,"mtime":1639195468361,"results":"36","hashOfConfig":"23"},{"size":540,"mtime":1637807178208,"results":"37","hashOfConfig":"23"},{"size":2351,"mtime":1637807178212,"results":"38","hashOfConfig":"23"},{"size":4091,"mtime":1637807178211,"results":"39","hashOfConfig":"23"},{"size":1083,"mtime":1637807178213,"results":"40","hashOfConfig":"23"},{"size":2041,"mtime":1637807178212,"results":"41","hashOfConfig":"23"},{"size":248082,"mtime":1637095262213,"results":"42","hashOfConfig":"23"},{"size":248387,"mtime":1637095267369,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"v4b6ui",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/index.js",[],["95","96"],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/reportWebVitals.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/App.js",["97","98"],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupTables.js",["99"],"// import logo from \"./logo.svg\";\nimport { useState } from \"react\";\nimport GroupPlayers from \"./groupTable\";\nconst groupedData = require(\"../data/groupDataFake.json\");\n\nconst GroupTables = (token) => {\n  console.log(\"token\", token);\n  const [groupData, setgroupData] = useState(groupedData);\n\n  const showGroups = () => {\n    let groupList = [];\n    for (let i = 0; i < groupData.length; i++) {\n      groupList.push(\n        <GroupPlayers\n          data={Object.entries(groupData[i])[2][1]} // 2 being players category\n          name={Object.entries(groupData[i])[1][1]} // 1 being name category\n        ></GroupPlayers>\n      );\n    }\n    return groupList;\n  };\n\n  const renderGroups = () => {\n    return <div>{showGroups()}</div>;\n  };\n\n  return <div>{renderGroups()}</div>;\n};\n\nexport default GroupTables;\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/NavBar.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/HomePage.jsx",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/HeadtoHead.jsx",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/AllPlayers.js",["100","101","102","103"],"import React, { useState, useMemo } from \"react\";\nimport { player_data } from \"../data/new_data-20-21\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { COLUMNS } from \"./columnsAP\";\nimport NavBar from \"../NavBar\";\nimport MultiModal from \"./multimodal\";\n\nimport { addToGroup, createGroup } from \"./groupingFunctions\";\n\n// CSS imports\nimport \"../css/AllPlayers.css\";\nimport \"../css/resetButton.css\";\nimport \"../css/sortButton.css\";\nimport \"../css/buttonStyling.css\";\n\n// Importing React-Table : https://www.bacancytechnology.com/blog/react-table-tutorial-part-1/#4\n// TABLE TUTORIAL: https://www.youtube.com/watch?v=hson9BXU9F8\n// CSV TO JSON Convertor: https://www.convertcsv.com/csv-to-json.htm\n\nconst AllPlayers = () => {\n  // Select All Checkboxes\n  function toggle(source, name) {\n    let checkboxes = document.querySelectorAll(`input[name=\"${name}\"]`);\n    let input = document.querySelectorAll(`input[name=\"${source}\"]`)[0];\n    checkboxes.forEach((checkbox) => {\n      if (checkbox.checked !== input.checked) {\n        checkbox.checked = input.checked;\n      }\n    });\n  }\n  // Show Modals\n  const [show, setShow] = useState(false);\n\n  // Creating React-Table\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => player_data, []);\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  );\n\n  console.log(data);\n\n  const {\n    // getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  return (\n    <div>\n      <div className={\"actionButtonsGroup\"}>\n        {/* <button onClick={() => setShow(true)} className={\"createGroup-button\"}>\n          {\" \"}\n          Create new group\n        </button>\n        <GroupModal onClose={() => setShow(false)} show={show} />\n        <div class=\"divider\" />\n        <button onClick={() => setShow(true)} className={\"addToTeam-button\"}>\n          {\" \"}\n          Add to group\n        </button>\n        <div class=\"divider\" />\n        <AddToExistingModal onClose={() => setShow(false)} show={show} className={\"addToExisting\"} /> */}\n        <MultiModal />\n\n        <button onClick={addToGroup} className=\"createGroup-button\">\n          Add to Group 1\n        </button>\n        <button onClick={createGroup} className=\"createGroup-button\">\n          Create Group\n        </button>\n        <div class=\"divider\" />\n      </div>\n\n      <table {...getTableBodyProps} className=\"whole-table\">\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              <input\n                type=\"checkbox\"\n                name=\"selectAll\"\n                // Selects all items\n                onClick={() => toggle(\"selectAll\", \"itemCheckbox\")}\n              ></input>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                <input\n                  type=\"checkbox\"\n                  name=\"itemCheckbox\"\n                  data={JSON.stringify(row.values)}\n                ></input>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// the home page with the items and the stuff at the bottom\nconst Home = () => (\n  <div>\n    <NavBar />\n    <header>\n      <AllPlayers />\n    </header>\n  </div>\n);\n\nexport { AllPlayers, Home };\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/SignupOrLogin.jsx",["104","105","106","107"],"import { useState, React, useEffect } from \"react\";\nimport axios from 'axios';\nimport hoops from \"../assets/hoops.png\";\nimport \"./SignupOrLogin.css\";\n\nfunction SignupOrLogin({ setToken }) {\n  const [entryType, setEntryType] = useState(\"Signup\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  //Button response that changes to Login page\n  function ChangeToLogin() {\n    setEntryType(\"Login\");\n    //Clear inputs\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  //Button response that changes to Signup page\n  function ChangeToSignup() {\n    setEntryType(\"Signup\");\n    //Clear inputs\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  //Function for confirming password in Signup page\n  function checkPassword(val) {\n    console.log(\"event\", val);\n    if (val == password) {\n      console.log(\"Yes!\");\n    } else {\n      console.log(\"No!\");\n    }\n  }\n\n  //Backend call for signing up user\n  function signUpUser(){\n    console.log('SIGN UP!');\n\n    const registered = {\n      email: email,\n      password: password,\n      groups: []\n    }\n\n    axios.post(\"http://localhost:4000/app/signup\", registered)\n      .then(res => {\n        console.log(res.data)\n        window.location.href = \"/Players\"\n      })\n  }\n\n  //Backend call for logging in user\n  function logInUser(){\n    console.log(\"LOG IN!\")\n    axios\n    .post(\"http://localhost:4000/app/login\", {\n      email, password\n    })\n    .then((res) => {\n      console.log(\"!\", res.data);\n      setToken(res.data.token);\n      localStorage.setItem(\"token\", res.data.token);\n      window.location.href = \"/Players\"\n    })\n    .catch((err) => {\n      console.log(\"errors!\", err);\n    })\n  }\n\n  return (\n    <div className=\"SignupOrLogin\">\n      <img src={hoops} className=\"SignupOrLogin__logo\" />\n      <div className=\"SignupOrLogin__centermodal\">\n        <div className=\"SignupOrLogin__header\">Welcome to the team!</div>\n        <div className=\"SignupOrLogin__subtitle\">\n          Enter your credentials to get access to your account.\n        </div>\n        <form>\n          {entryType === \"Signup\" ? (\n            <div className=\"SignupOrLogin__fields\">\n              <input\n                type=\"text\"\n                className=\"SignupOrLogin__email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                required\n              />\n              <input\n                type=\"text\"\n                className=\"SignupOrLogin__setpass\"\n                placeholder=\"Set password\"\n                value={password}\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                required\n              />\n              <input\n                type=\"text\"\n                className=\"SignupOrLogin__setpass\"\n                placeholder=\"Confirm password\"\n                onChange={(event) => {\n                  checkPassword(event.target.value);\n                }}\n                required\n              />\n            </div>\n          ) : (\n            <div className=\"SignupOrLogin__fields\">\n              <input\n                type=\"text\"\n                className=\"SignupOrLogin__email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n                required\n              />\n              <input\n                type=\"text\"\n                className=\"SignupOrLogin__setpass\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(event) => {\n                  setPassword(event.target.value);\n                }}\n                required\n              />\n            </div>\n          )}\n        </form>\n        {entryType === \"Signup\" ? (\n          <div className=\"SignupOrLogin__btns\">\n            <button\n              className=\"SignupOrLogin__signupbtn\"\n              onClick={() => signUpUser()}\n            >\n              Sign up\n            </button>\n            <div>\n              or {\" \"}\n              <button\n                className=\"SignupOrLogin__loginbtn\"\n                onClick={() => ChangeToLogin()}\n              >\n                Log in\n              </button>\n            </div>\n          </div>\n        ) : (\n            <div className=\"SignupOrLogin__btns\">\n            <button\n              className=\"SignupOrLogin__signupbtn\"\n              onClick={() => logInUser()}\n            >\n              Log in\n            </button>\n            <div>\n              or {\" \"}\n              <button\n                className=\"SignupOrLogin__loginbtn\"\n                onClick={() => ChangeToSignup()}\n              >\n                Sign up\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SignupOrLogin;\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupTable.js",["108"],"import React, { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport { COLUMNS } from \"./columnsAP\";\nimport GroupHeader from \"./GroupHeader.js\";\nimport \"../css/groupTable.css\";\n\n// Importing React-Table : https://www.bacancytechnology.com/blog/react-table-tutorial-part-1/#4\n// TABLE TUTORIAL: https://www.youtube.com/watch?v=hson9BXU9F8\n// CSV TO JSON Convertor: https://www.convertcsv.com/csv-to-json.htm\n\nconst GroupPlayers = (props) => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => props.data, []);\n\n  const tableInstance = useTable({\n    columns,\n    data,\n  });\n\n  const {\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  return (\n    <div className=\"groupTable\">\n      <GroupHeader name={props.name} />\n      <table {...getTableBodyProps}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GroupPlayers;\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/new_data-20-21.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/columnsAP.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/multimodal.js",["109","110","111","112"],"\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport \"../css/createExistingGroupsModal.css\"\nimport \"../css/createGroupbutton.css\"\nimport \"../css/createGroupModal.css\"\nimport \"../css/modalstyles.css\"\nimport GroupModal from \"./createGroupModal\";\nimport AddToExistingModal from \"./createExistingGroupsModal\";\n\nclass MultiModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            activeModal: \"\",\n        };\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n        this.handleCloseModal = this.handleCloseModal.bind(this);\n    }\n\n    handleOpenModal(val) {\n        this.setState({ activeModal: val });\n        this.setState({ showModal: true });\n    }\n\n    handleCloseModal() {\n        this.setState({ showModal: false });\n        this.setState({ showModal: \"\" });\n    }\n    render() {\n        return (\n            <>\n                <div className=\"icon\">\n                    <div className=\"modal-container\"\n                        className=\"modal-button-newGroup\"\n                        onClick={() => this.handleOpenModal(\"newGroup\")}\n                    >\n                        Create New Group\n                    </div>\n                    <Modal\n\n                        isOpen={\n                            this.state.showModal &&\n                            this.state.activeModal === \"newGroup\"\n                        }\n                        contentLabel=\"newGroup Modal\"\n                    >\n                        <div className=\"content\">\n                            <button className=\"close\" onClick={this.handleCloseModal}>X</button>\n                            <div className=\"modal-header\">\n                                <div className=\"modal-title\"> Create new Group </div>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                    <input type=\"textarea\" value=\"Type in group name here\" id=\"groupNameinput\" />\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button className=\"exitcreategroup-button\" onClick={this.handleCloseModal}>Create Group</button>\n\n                            </div>\n                        </div>\n\n                    </Modal>\n                </div>\n                <div className=\"icon\">\n                    <div className=\"modal-container\"\n                        className=\"modal-button-existingGroup\"\n                        onClick={() => this.handleOpenModal(\"existingGroup\")}\n                    >\n                        Add to group\n                    </div>\n                    <Modal\n                        isOpen={\n                            this.state.showModal &&\n                            this.state.activeModal === \"existingGroup\"\n                        }\n                        contentLabel=\"existingGroup Modal\"\n                    >\n                        <div className=\"content\">\n                            <button className=\"close\" onClick={this.handleCloseModal}>X</button>\n                            <div className=\"modal-header-existing-modal\">\n                                <div className=\"modal-title-existing-modal\"> Add to existing group </div>\n                            </div>\n                            <div className=\"modal-body-existing-modal\">\n                                <label class=\"container\">One\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n\n                                <label class=\"container\">Two\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n                                <label class=\"container\">fourteen\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n                                <label class=\"container\">One\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n\n                                <label class=\"container\">Two\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n                                <label class=\"container\">fourteen\n                                    <input type=\"checkbox\"></input>\n                                    <span className=\"checkmark\"></span>\n                                </label>\n\n\n                            </div>\n                            <div className=\"modal-footer-existing-modal\">\n                                {/* need to change when adding object to existing groups */}\n                                <button className=\"exitcreategroup-button\" onClick={this.handleCloseModal}>Add</button>\n                            </div>\n                        </div>\n\n                    </Modal>\n                </div>\n\n            </>\n        )\n\n    }\n}\nexport default MultiModal;","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/groupingFunctions.js",["113","114","115","116","117","118","119","120","121"],"import React, { useState, useMemo } from \"react\";\nimport { player_data } from \"../data/new_data-20-21\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { COLUMNS } from \"./columnsAP\";\nimport NavBar from \"../NavBar\";\nimport MultiModal from \"./multimodal\";\n\n// CSS imports\nimport \"../css/AllPlayers.css\";\nimport \"../css/resetButton.css\";\nimport \"../css/sortButton.css\";\nimport \"../css/buttonStyling.css\";\n\nconst groupData = require(\"../data/groupDataFake.json\");\n\n// Get checkboxes\nexport function getSelectedCheckboxItems(name) {\n  let values = [];\n  // grabs all checkboxes that are checked\n  const checkboxes = document.querySelectorAll(`input[name=\"${name}\"]:checked`);\n  checkboxes.forEach((checkbox) => {\n    values.push(checkbox);\n  });\n  // returns arrays of all checkboxes that are checked\n  return values;\n}\n\n// Get data from checkboxes\nexport const addToGroup = () => {\n  let vals = getSelectedCheckboxItems(\"itemCheckbox\");\n  // console.log(vals[0].getAttribute(\"data\"));\n  let objects = [];\n  if (vals.length !== 0) {\n    for (let i = 0; i < vals.length; i++) {\n      let str_data = vals[i].getAttribute(\"data\");\n      let obj_data = JSON.parse(str_data);\n      objects.push(obj_data);\n    }\n  }\n\n  // uncheck all checkboxes\n  let checkboxes = document.querySelectorAll(`input[name=\"itemCheckbox\"]`);\n  checkboxes.forEach((checkbox) => {\n    checkbox.checked = false;\n  });\n\n  // Adds to Gropu 1 Currently\n  if (objects.length !== 0) {\n    console.log(Object.entries(groupData[0])[2][1]); // 0 for object, 2 for players, 1 for the array\n    for (let i = 0; i < objects.length; i++) {\n      // groupData.push(objects[i]);\n      Object.entries(groupData[0])[2][1].push(objects[i]);\n    }\n    // console.log(Object.entries(groupData[0]));\n    return objects;\n  }\n};\n\n// Get data from checkboxes\nexport const createGroup = () => {\n  let vals = getSelectedCheckboxItems(\"itemCheckbox\");\n  // console.log(vals[0].getAttribute(\"data\"));\n  let objects = [];\n  if (vals.length !== 0) {\n    for (let i = 0; i < vals.length; i++) {\n      let str_data = vals[i].getAttribute(\"data\");\n      let obj_data = JSON.parse(str_data);\n      objects.push(obj_data);\n    }\n  }\n\n  // uncheck all checkboxes\n  let checkboxes = document.querySelectorAll(`input[name=\"itemCheckbox\"]`);\n  checkboxes.forEach((checkbox) => {\n    checkbox.checked = false;\n  });\n\n  if (objects.length !== 0) {\n    let newGroup = { id: 6, name: \"New Group\", players: objects };\n    groupData.push(newGroup);\n    console.log(groupData);\n    return objects;\n  }\n};\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/GroupHeader.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/SearchBar.jsx",["122","123"],"import { useState } from \"react\";\nimport React from \"react\";\nimport \"../css/SearchBar.css\";\nimport searchicon from \"../assets/searchicon.png\"\n\nfunction Search({ placeholder, data, updatePlayer}){\n    //filteredData based off of search word\n    const [filteredData, setFilteredData] = useState([]);\n    //search word\n    const [wordEntered, setWordEntered] = useState(\"\");\n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      setWordEntered(searchWord);\n      const newFilter = data.filter((value) => {\n        return value.Player.toLowerCase().includes(searchWord.toLowerCase());\n      });\n\n      //If empty searchbar, then set filteredData to empty array\n      if (searchWord === \"\") {\n        setFilteredData([]);\n      } else {\n        //Otherwise, setFilteredData based off of newFilter return\n        console.log('newFilter', newFilter);\n        setFilteredData(newFilter);\n      }\n    };\n\n    const clearInput = () => {\n      setFilteredData([]);\n      setWordEntered(\"\");\n    };\n\n    //Select player from dropdown list and filteredData\n    function selectPlayer(value){\n      let index = data.findIndex( element => {\n          if (element.Player === value.Player) {\n              return true;\n          }\n        });\n        //Send the index of the player selected up to parent component\n        //Index is used to keep track of player\n        updatePlayer(index);\n        console.log(value.Player + 'is at index: ' + index);\n        //After selecting value, clear input/searchbar\n        clearInput();\n    }\n\n    return(\n        <div>\n            <div className=\"search-group\">\n                <input\n                    type=\"text\"\n                    placeholder={placeholder}\n                    value={wordEntered}\n                    onChange={handleFilter}\n                    className=\"searchbar\"\n                />\n                <img className=\"search-icon\" src={searchicon} />\n            </div>\n            {/* <Button onClick={clearInput}></Button> */}\n            <div>\n            <div className=\"filtered-list\">\n                {filteredData.map((value, key) => (\n                    <button className=\"player-option\" onClick={(event) => selectPlayer(value)}>{value.Player}</button>\n                ))}\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/PlayerCard.jsx",["124"],"import { player_data } from \"../data/new_data-20-21\";\nimport { onePrevPlayers } from \"../data/uncleaned_players_19-20\";\nimport { twoPrevPlayers } from \"../data/uncleaned_players_18-19\";\nimport \"../css/PlayerCard.css\";\nimport { useState } from \"react\";\n\nfunction PlayerCard(props) {\n\n  //Take input player ID as current playerCard to display\n  const player = player_data[props.player];\n  \n  //Find the index of this player\n  const onePrevIndex = onePrevPlayers.findIndex(obj => obj.Player === player.Player);\n  const twoPrevIndex = twoPrevPlayers.findIndex(obj => obj.Player = player.Player);\n\n  //Use index to find correct player object\n  const onePrevPlayer = onePrevPlayers[onePrevIndex];\n  const twoPrevPlayer = twoPrevPlayers[twoPrevIndex];\n\n  console.log(\"player\", player);\n  console.log(\"oneprev\", onePrevPlayer);\n  console.log(\"twoprev\", twoPrevPlayer);\n\n  //Parse name string to get first and last name as separate strings\n  const playerName = player.Player.split(\" \");\n  const playerFirstName = playerName[0];\n  const playerLastName = playerName[1];\n\n  const playerData = initializeValues(player);\n  const onePrevPlayerData = initializeValues(onePrevPlayer);\n  const twoPrevPlayerData = initializeValues(twoPrevPlayer);\n\n  function initializeValues(player) {\n    let dataArray = [];\n    //If player exists, produce values\n    if (player){\n      const divideFTM = (player.FT / player.FTA).toFixed(2);\n      const divideFGM = (player.FG / player.FGA).toFixed(2);\n  \n      dataArray = [\n        { \"FGM/A\": divideFGM },\n        { \"FG%\": player.FG.toFixed(2) },\n        { \"FTM/A\": divideFTM },\n        { \"FT%\": player.FT.toFixed(2) },\n        { \"STL\": player.STL.toFixed(2) },\n        { PTS: player.PTS.toFixed(2) },\n        { REBS: player.TRB.toFixed(2) },\n        { AST: player.AST.toFixed(2) },\n      ];\n    }\n    //Otherwise, just produce NaN values for everything\n    else{\n      dataArray = [\n        { \"FGM/A\": \"NaN\" },\n        { \"FG%\": \"NaN\" },\n        { \"FTM/A\": \"NaN\" },\n        { \"FT%\": \"NaN\" },\n        { \"STL\": \"NaN\" },\n        { PTS: \"NaN\" },\n        { REBS: \"NaN\" },\n        { AST: \"NaN\" },\n      ];\n    }\n    console.log(dataArray);\n    return dataArray;\n  }\n\n\n  //I'm lazy right now, so this is iterating values for current season\n  const iterateCurrent = playerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  //I'm lazy right now, so this is iterating values for one year previous\n  const iterateOneYearPrev = onePrevPlayerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  //I'm lazy right now, so this is iterating values for two years previous\n  const iterateTwoYearPrev = twoPrevPlayerData.map((value, key) => {\n    return (\n      <div>\n        {Object.keys(value).map((val, k) => (\n          <div className=\"number\" k={k}>\n            {value[val]}\n          </div>\n        ))}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"whole-card\">\n      <div className=\"player-name\">\n          <div className=\"first\">{playerFirstName}</div>\n          <div className=\"last\">{playerLastName}</div>\n      </div>\n      <div className=\"card-box\">\n        <div className=\"data-labels\">\n          <p className=\"light\">FGM/A</p>\n          <p>FG%</p>\n          <p className=\"light\">FTM/A</p>\n          <p>FT%</p>\n          <p>STL</p>\n          <p>PTS</p>\n          <p>REBS</p>\n          <p>AST</p>\n        </div>\n        <div className=\"time-label\">2020-2021 Season</div>\n        <div className=\"data-row\">{iterateCurrent}</div>\n        <div className=\"time-label\">2019-2020 Season</div>\n        <div className=\"data-row\">{iterateOneYearPrev}</div>\n        <div className=\"time-label\">2018-2019 Season</div>\n        <div className=\"data-row\">{iterateTwoYearPrev}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerCard;\n","/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/createGroupModal.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/components/createExistingGroupsModal.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/uncleaned_players_18-19.js",[],"/Users/cindykim/Desktop/cindykimxp/nba_player_analyzer/frontend/src/data/uncleaned_players_19-20.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":16},{"ruleId":"129","severity":1,"message":"133","line":12,"column":7,"nodeType":"131","messageId":"132","endLine":12,"endColumn":18},{"ruleId":"129","severity":1,"message":"134","line":7,"column":21,"nodeType":"131","messageId":"132","endLine":7,"endColumn":33},{"ruleId":"129","severity":1,"message":"135","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":20},{"ruleId":"129","severity":1,"message":"136","line":8,"column":22,"nodeType":"131","messageId":"132","endLine":8,"endColumn":33},{"ruleId":"129","severity":1,"message":"137","line":32,"column":10,"nodeType":"131","messageId":"132","endLine":32,"endColumn":14},{"ruleId":"129","severity":1,"message":"138","line":32,"column":16,"nodeType":"131","messageId":"132","endLine":32,"endColumn":23},{"ruleId":"129","severity":1,"message":"139","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"140","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":29,"column":13,"nodeType":"143","messageId":"144","endLine":29,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":43,"column":7,"nodeType":"147","endLine":43,"endColumn":58},{"ruleId":"148","severity":1,"message":"149","line":13,"column":42,"nodeType":"150","endLine":13,"endColumn":44,"suggestions":"151"},{"ruleId":"129","severity":1,"message":"152","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":18},{"ruleId":"129","severity":1,"message":"153","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":51,"column":25,"nodeType":"156","messageId":"157","endLine":51,"endColumn":58},{"ruleId":"154","severity":1,"message":"155","line":83,"column":25,"nodeType":"156","messageId":"157","endLine":83,"endColumn":63},{"ruleId":"129","severity":1,"message":"158","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":13},{"ruleId":"129","severity":1,"message":"159","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"160","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":34},{"ruleId":"129","severity":1,"message":"161","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},{"ruleId":"129","severity":1,"message":"162","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":18},{"ruleId":"129","severity":1,"message":"163","line":3,"column":20,"nodeType":"131","messageId":"132","endLine":3,"endColumn":29},{"ruleId":"129","severity":1,"message":"164","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":17},{"ruleId":"129","severity":1,"message":"165","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"166","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":36,"column":43,"nodeType":"169","messageId":"170","endLine":36,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":59,"column":17,"nodeType":"147","endLine":59,"endColumn":65},{"ruleId":"129","severity":1,"message":"159","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":18},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","'groupedData' is assigned a value but never used.","'setgroupData' is assigned a value but never used.","'addToGroup' is defined but never used.","'createGroup' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'props.data'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'GroupModal' is defined but never used.","'AddToExistingModal' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'React' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'player_data' is defined but never used.","'useTable' is defined but never used.","'useSortBy' is defined but never used.","'COLUMNS' is defined but never used.","'NavBar' is defined but never used.","'MultiModal' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [props.data]",{"range":"176","text":"177"},[558,560],"[props.data]"]